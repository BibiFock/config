#!/bin/bash

COLOR_RESET="\\033[0m"
COLOR_YELLOW="\\033[33m"
COLOR_GREEN="\\033[32m"
COLOR_RED="\\033[31m"
COLOR_MAGENTA="\\033[35m"
COLOR_BOLD="\\e[1m"

BRANCHE_SOURCE=${1:-"master"}

function confirmation {
    echo -e $COLOR_YELLOW
    read -p "${1:-Do It?} " -n 1 -r
    echo -e $COLOR_RESET   # (optional) move to a new line
    if ! [[ $REPLY =~ ^[Yy]$ ]]; then
        echo -e "\n"
        if type "fortune" &> /dev/null; then
            echo -e $COLOR_MAGENTA"$(fortune ~/config/fortune/quotes)" $COLOR_RESET
        else
            echo -e $COLOR_MAGENTA"See you next time!!"$COLOR_RESET
        fi
        echo -e "\n"
        exit 1
    fi
}

function isOk {
    [ $? -ne 0 ] && echo -e "$RED$1\n\n==> FAILED$RESET" && exit 1
}

git fetch

isUpToDate=$(git merge-base --is-ancestor $(git log -1 --pretty="format:%h" origin/master) HEAD && echo "1")

if [ "$isUpToDate" ]; then
	echo
	echo -e "$COLOR_GREEN \xE2\x9C\x94 current branch up to date with $COLOR_GREEN\"$BRANCHE_SOURCE\"$COLOR_RESET"
	echo
	exit;
fi

echo
echo -e "\xE2\x9D\x8C${COLOR_RED} current branch not up to date with $COLOR_YELLOW\"$BRANCHE_SOURCE\""
echo

confirmation "Do you want to rebase ?"

git rebase origin/$BRANCHE_SOURCE
isOk "rebase"

echo -e $COLOR_RESET
