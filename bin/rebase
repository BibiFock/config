#!/bin/bash

RESET="\\033[0m"
YELLOW="\\033[33m"
GREEN="\\033[32m"
RED="\\033[31m"
MAGENTA="\\033[35m"

function isOk {
    [ $? -ne 0 ] && echo -e "$RED$1\n\n==> FAILED$RESET" && exit
}

function step {
    echo -e $YELLOW-------------------------------------------------------- [$1]$RESET
}

step "find current branch"
currentBranch="$(git symbolic-ref --short -q HEAD)"
echo $currentBranch
isOk "current branch not found"

destBranch="master"
if [[ $# == 1 ]]; then
    destBranch=$1
fi

if [[ $currentBranch == $destBranch ]]; then
    echo -e $RED "can't merge $destBranch with himself,\n\n DUMBASS!!" && exit
fi

git diff-index HEAD --quiet --exit-code;
NEEDS_STASH=$?;

if [ $NEEDS_STASH -eq "1" ]; then
    step "stash unused files"
    git stave "** rebase-script **"
else
    echo "Nothing to stash."
fi

step "update $destBranch"
git co $destBranch
isOk "checkout to $destBranch"

git pull
isOk "$destBranch pull"

step "rebase $currentBranch"
git co $currentBranch
isOk "checkout to $currentBranch"

git rebase $destBranch
isOk "rebase"

step "merge $currentBranch in $destBranch"
git co $destBranch
isOk "Checkout to $destBranch"

git merge $currentBranch
isOk "merge $currentBranch"

if [ $NEEDS_STASH -eq "1" ]; then
    step "recover stashed files"
    git pop
fi

if [[ $currentBranch != "dev" && $currentBranch != "master" ]]; then
    step "delete branch $currentBranch"
    read -p "Do you want to delete branch $currentBranch ? " -n 1 -r
    echo    # (optional) move to a new line
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        git br -d $currentBranch
        isOk "branch $currentBranch is deleted"
    fi
fi

step "Result"

if type "fortune" &> /dev/null; then
    echo -e "\n"$MAGENTA $(fortune ~/config/fortune/quote) $RESET
fi

echo -e "\n"$GREEN"==> ready to push$RESET\n"

